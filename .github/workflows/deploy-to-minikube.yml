name: Deploy CloudVibes to Minikube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: cloudvibes
  IMAGE_TAG: latest
  DEPLOYMENT_NAME: cloudvibes-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests (if available)
      run: |
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          npm test || echo "No tests found or tests failed - continuing deployment"
        else
          echo "No test script found in package.json"
        fi
      
    - name: Build application
      run: npm run build
      
    - name: Setup Minikube
      uses: medyagh/setup-minikube@master
      with:
        minikube-version: 1.32.0
        kubernetes-version: 1.28.3
        driver: docker
        
    - name: Enable Minikube addons
      run: |
        minikube addons enable dashboard
        minikube addons enable metrics-server
        
    - name: Build Docker image in Minikube
      run: |
        # Configure Docker to use Minikube's Docker daemon
        eval $(minikube -p minikube docker-env)
        
        # Build the Docker image
        docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        
        # Verify image was built
        docker images | grep ${{ env.IMAGE_NAME }}
        
    - name: Deploy to Minikube
      run: |
        # Apply Kubernetes manifests
        kubectl apply -f k8s/deployment.yaml
        
        # Wait for deployment to be ready
        kubectl wait --for=condition=available --timeout=300s deployment/${{ env.DEPLOYMENT_NAME }}
        
        # Get deployment status
        kubectl get deployments
        kubectl get pods
        kubectl get services
        
    - name: Run health check
      run: |
        # Port forward to access the service
        kubectl port-forward service/cloudvibes-service 8080:80 &
        PORT_FORWARD_PID=$!
        
        # Wait for port forward to be ready
        sleep 10
        
        # Run health check
        if curl -f http://localhost:8080/api/health; then
          echo "‚úÖ Health check passed"
        else
          echo "‚ùå Health check failed"
          exit 1
        fi
        
        # Clean up port forward
        kill $PORT_FORWARD_PID
        
    - name: Get service URL
      run: |
        echo "üöÄ Deployment successful!"
        echo "Service URL: $(minikube service cloudvibes-service --url)"
        echo "Dashboard URL: $(minikube dashboard --url)"
        
    - name: Show deployment info
      if: always()
      run: |
        echo "=== Deployment Information ==="
        kubectl describe deployment ${{ env.DEPLOYMENT_NAME }}
        echo ""
        echo "=== Pod Status ==="
        kubectl get pods -l app=cloudvibes
        echo ""
        echo "=== Service Status ==="
        kubectl get services
        echo ""
        echo "=== Recent Events ==="
        kubectl get events --sort-by=.metadata.creationTimestamp