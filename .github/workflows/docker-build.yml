name: Build and Push to Docker Hub

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:

env:
  IMAGE_NAME: cloudvibes

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:ci
      continue-on-error: true

    - name: Build application
      run: npm run build

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate version tags
      id: tags
      run: |
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        BRANCH=${{ github.ref_name }}
        COMMIT_SHA=${GITHUB_SHA::7}
        
        if [ "$BRANCH" = "main" ]; then
          VERSION_TAG="v1.0.${GITHUB_RUN_NUMBER}"
          ENV_TAG="prod"
        else
          VERSION_TAG="v0.${GITHUB_RUN_NUMBER}.0-${BRANCH}"
          ENV_TAG="dev"
        fi
        
        echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
        echo "version=$VERSION_TAG" >> $GITHUB_OUTPUT
        echo "env_tag=$ENV_TAG" >> $GITHUB_OUTPUT
        echo "commit=$COMMIT_SHA" >> $GITHUB_OUTPUT
        echo "full_tag=${ENV_TAG}-${TIMESTAMP}-${COMMIT_SHA}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      run: |
        REGISTRY_PREFIX="${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME"
        
        # Build with build args for better caching
        docker build \
          --build-arg NODE_ENV=production \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VERSION=${{ steps.tags.outputs.version }} \
          --build-arg COMMIT=${{ steps.tags.outputs.commit }} \
          --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          --label "org.opencontainers.image.version=${{ steps.tags.outputs.version }}" \
          --label "org.opencontainers.image.revision=${{ github.sha }}" \
          -t $IMAGE_NAME:${{ steps.tags.outputs.full_tag }} .
        
        # Tag with multiple versions
        docker tag $IMAGE_NAME:${{ steps.tags.outputs.full_tag }} $REGISTRY_PREFIX:${{ steps.tags.outputs.full_tag }}
        docker tag $IMAGE_NAME:${{ steps.tags.outputs.full_tag }} $REGISTRY_PREFIX:${{ steps.tags.outputs.version }}
        docker tag $IMAGE_NAME:${{ steps.tags.outputs.full_tag }} $REGISTRY_PREFIX:${{ steps.tags.outputs.env_tag }}-latest
        
        # Push all tags
        docker push $REGISTRY_PREFIX:${{ steps.tags.outputs.full_tag }}
        docker push $REGISTRY_PREFIX:${{ steps.tags.outputs.version }}
        docker push $REGISTRY_PREFIX:${{ steps.tags.outputs.env_tag }}-latest
        
        echo "FULL_TAG=${{ steps.tags.outputs.full_tag }}" >> $GITHUB_ENV
        echo "VERSION_TAG=${{ steps.tags.outputs.version }}" >> $GITHUB_ENV

    - name: Build summary
      run: |
        echo "## 🐳 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: Docker Hub" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ env.VERSION_TAG }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Full Tag**: ${{ env.FULL_TAG }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Available Tags:" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.FULL_TAG }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.env_tag }}-latest\`" >> $GITHUB_STEP_SUMMARY