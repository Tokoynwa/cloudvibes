name: 🧪 Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Unit and Integration Tests
  unit-tests:
    name: 🔬 Unit & Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🧪 Run unit tests
      run: npm run test:ci
      
    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: cloudvibes-unit-tests
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      continue-on-error: true
        
    - name: 📈 Upload coverage to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: coverage/
        retention-days: 30

  # Lint and Type Check
  lint-and-types:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🔍 Run ESLint
      run: npm run lint
      
    - name: 📝 Type check
      run: npx tsc --noEmit

  # Build Test
  build-test:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1
        
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 7

  # E2E Tests
  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: [build-test]
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 📦 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: .next/
        
    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: 🎭 Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true
        
    - name: 📊 Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
        
    - name: 📹 Upload Test Videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-videos-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

  # Mobile E2E Tests
  mobile-e2e-tests:
    name: 📱 Mobile E2E Tests
    runs-on: ubuntu-latest
    needs: [build-test]
    
    strategy:
      matrix:
        device: ['Mobile Chrome', 'Mobile Safari']
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 📦 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: .next/
        
    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: 📱 Run Mobile tests
      run: npx playwright test --project="${{ matrix.device }}"
      env:
        CI: true
        
    - name: 📊 Upload Mobile Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-report-${{ matrix.device }}
        path: playwright-report/
        retention-days: 30

  # Performance Tests
  performance-tests:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    needs: [build-test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 📦 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: .next/
        
    - name: 🚀 Start application
      run: npm start &
      env:
        PORT: 3000
        
    - name: ⏳ Wait for app to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 2; done'
        
    - name: ⚡ Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      continue-on-error: true

  # Security Tests
  security-tests:
    name: 🔒 Security Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🔒 Run npm audit
      run: npm audit --audit-level high
      continue-on-error: true
      
    - name: 🔍 Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Test Summary
  test-summary:
    name: 📋 Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, lint-and-types, build-test, e2e-tests, mobile-e2e-tests]
    if: always()
    
    steps:
    - name: 📊 Test Results Summary
      run: |
        echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit & Integration | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Lint & Types | ${{ needs.lint-and-types.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build | ${{ needs.build-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| E2E Tests | ${{ needs.e2e-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Mobile E2E | ${{ needs.mobile-e2e-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.unit-tests.result }}" == "success" && "${{ needs.lint-and-types.result }}" == "success" && "${{ needs.build-test.result }}" == "success" && "${{ needs.e2e-tests.result }}" == "success" && "${{ needs.mobile-e2e-tests.result }}" == "success" ]]; then
          echo "🎉 All tests passed! Ready for deployment." >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some tests failed. Please review and fix issues before deployment." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi