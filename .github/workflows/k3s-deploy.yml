name: 🚀 K3s CloudVibes Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action'
        default: 'deploy'
        type: choice
        options: [deploy, status, restart]

env:
  IMAGE_NAME: cloudvibes
  NAMESPACE: default

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📦 Install & Build
      run: |
        npm ci --prefer-offline --no-audit
        npm run build
        
    - name: 🐳 Build & Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set -e
          
          # Generate image tag
          IMAGE_TAG="$(date +%Y%m%d-%H%M%S)-$(echo ${{ github.sha }} | cut -c1-7)"
          echo "🚀 Deploying CloudVibes:$IMAGE_TAG"
          
          # Navigate to project directory
          cd /my-mcp-server/cloudvibes
          
          # Pull latest code
          git fetch origin
          git reset --hard origin/main
          
          # Build Docker image
          echo "🐳 Building Docker image..."
          docker build -t cloudvibes:$IMAGE_TAG .
          
          # Import to k3s
          echo "📥 Importing to k3s..."
          docker save cloudvibes:$IMAGE_TAG | sudo k3s ctr images import -
          
          # Deploy to k3s
          echo "🚀 Deploying to k3s..."
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          kubectl set image deployment/cloudvibes cloudvibes=cloudvibes:$IMAGE_TAG -n default
          
          # Wait for rollout
          echo "⏳ Waiting for rollout..."
          kubectl rollout status deployment/cloudvibes -n default --timeout=300s
          
          # Health check
          echo "🏥 Health check..."
          sleep 10
          if curl -f -s https://cloudvibes.org/api/health > /dev/null; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Health check failed"
            exit 1
          fi
        
    - name: 📊 Deployment Summary
      if: always()
      run: |
        echo "## 🚀 CloudVibes Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** $([ $? -eq 0 ] && echo '✅ SUCCESS' || echo '❌ FAILED')" >> $GITHUB_STEP_SUMMARY
        echo "**Deployed to:** https://cloudvibes.org" >> $GITHUB_STEP_SUMMARY
        echo "**Server:** 216.87.32.17" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Access Application:" >> $GITHUB_STEP_SUMMARY
        echo "- **Website:** https://cloudvibes.org" >> $GITHUB_STEP_SUMMARY
        echo "- **Health Check:** https://cloudvibes.org/api/health" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Features Deployed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Weather Dashboard" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ About & Contact Pages" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Weather Guides" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Help & FAQ" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ SSL Certificate (Let's Encrypt)" >> $GITHUB_STEP_SUMMARY