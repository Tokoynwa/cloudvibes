services:
  # Development service
  cloudvibes-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: cloudvibes-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped
    profiles:
      - dev

  # Production service
  cloudvibes:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: cloudvibes-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: cloudvibes-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - cloudvibes
    restart: unless-stopped
    profiles:
      - prod
      - nginx

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: cloudvibes-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - prod
      - cache

volumes:
  redis_data:

networks:
  default:
    name: cloudvibes-network