{{- if .Values.slots.green.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudvibes.fullname" . }}-green
  labels:
    {{- include "cloudvibes.labels" . | nindent 4 }}
    app.kubernetes.io/slot: green
spec:
  replicas: {{ .Values.slots.green.replicas | default .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "cloudvibes.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/slot: green
  template:
    metadata:
      labels:
        {{- include "cloudvibes.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/slot: green
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.slots.green.image.tag | default .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{- include "cloudvibes.env" . | nindent 12 }}
            - name: DEPLOYMENT_SLOT
              value: "green"
          livenessProbe:
            httpGet:
              path: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.path | default "/api/health" }}{{ else }}"/api/health"{{ end }}
              port: http
            initialDelaySeconds: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.initialDelaySeconds | default 30 }}{{ else }}30{{ end }}
            periodSeconds: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.periodSeconds | default 10 }}{{ else }}10{{ end }}
            timeoutSeconds: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.timeoutSeconds | default 5 }}{{ else }}5{{ end }}
            failureThreshold: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.failureThreshold | default 3 }}{{ else }}3{{ end }}
          readinessProbe:
            httpGet:
              path: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.path | default "/api/health" }}{{ else }}"/api/health"{{ end }}
              port: http
            initialDelaySeconds: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.initialDelaySeconds | default 30 }}{{ else }}30{{ end }}
            periodSeconds: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.periodSeconds | default 10 }}{{ else }}10{{ end }}
            timeoutSeconds: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.timeoutSeconds | default 5 }}{{ else }}5{{ end }}
            successThreshold: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.successThreshold | default 1 }}{{ else }}1{{ end }}
            failureThreshold: {{ if and .Values.blueGreen .Values.blueGreen.healthCheck }}{{ .Values.blueGreen.healthCheck.failureThreshold | default 3 }}{{ else }}3{{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}